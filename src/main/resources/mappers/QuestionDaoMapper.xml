<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper:根标签，namespace：命名空间，随便写，一般保证命名空间唯一 -->
<mapper namespace="com.example.communication.dao.QuestionDao">
    <!-- statement，内容：sql语句。id：唯一标识，随便写，在同一个命名空间下保持唯一
       resultType：sql语句查询结果集的封装类型,tb_user即为数据库中的表
     -->

    <!--插入数据-->
    <insert id="insertQuestion" parameterType="com.example.communication.model.Question">
        insert into question(
        title,
        description,
        gmt_create,
        gmt_modified,
        creator,
        comment_account,
        view_account,
        like_account,
        tag) values
        (#{title}, #{description}, #{gmtCreate}, #{gmtModified},
        #{creator}, #{commentAccount}, #{viewAccount}, #{likeAccount}, #{tag});
    </insert>

    <!--查询数据-->
    <select id="queryQuestionAll" resultType="com.example.communication.model.Question">
        select id as id,
        title as title,
        description as description,
        gmt_create as gmtCreate,
        gmt_modified as gmtModified,
        creator as creator,
        comment_account as commentAccount,
        view_account as viewAccount,
        like_account as likeAccount,
        tag as tag
        from question;
    </select>

    <!--根据rows和offset查询数据-->
    <select id="queryQuestionByPage" resultType="com.example.communication.model.Question">
        select id as id,
        title as title,
        description as description,
        gmt_create as gmtCreate,
        gmt_modified as gmtModified,
        creator as creator,
        comment_account as commentAccount,
        view_account as viewAccount,
        like_account as likeAccount,
        tag as tag
        from question limit #{rows}, #{offset};
    </select>

    <!--根据id, rows和offset查询数据-->
    <select id="queryQuestionByID" resultType="com.example.communication.model.Question">
        select id as id,
        title as title,
        description as description,
        gmt_create as gmtCreate,
        gmt_modified as gmtModified,
        creator as creator,
        comment_account as commentAccount,
        view_account as viewAccount,
        like_account as likeAccount,
        tag as tag
        from question where creator = #{creator} limit #{rows}, #{offset};
    </select>

    <!--根据用户id查询数据-->
    <select id="queryQuestionByCreator" resultType="com.example.communication.model.Question">
        select id as id,
        title as title,
        description as description,
        gmt_create as gmtCreate,
        gmt_modified as gmtModified,
        creator as creator,
        comment_account as commentAccount,
        view_account as viewAccount,
        like_account as likeAccount,
        tag as tag
        from question where creator = #{creator};
    </select>

    <!--根据问题id查询问题详情-->
    <select id="queryByQuestionId" resultType="com.example.communication.model.Question">
        select id as id,
        title as title,
        description as description,
        gmt_create as gmtCreate,
        gmt_modified as gmtModified,
        creator as creator,
        comment_account as commentAccount,
        view_account as viewAccount,
        like_account as likeAccount,
        tag as tag
        from question where id = #{id};
    </select>


    <!--根据问题id更新问题详情-->
    <update id="updateQuestion" parameterType="com.example.communication.model.Question">
        update question set
        title = #{title},
        description = #{description},
        gmt_modified = #{gmtModified},
        creator = #{creator},
        comment_account = #{commentAccount},
        view_account = #{viewAccount},
        like_account = #{likeAccount},
        tag = #{tag}
        where id = #{id};
    </update>
</mapper>
